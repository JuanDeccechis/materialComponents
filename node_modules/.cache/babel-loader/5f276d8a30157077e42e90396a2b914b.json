{"ast":null,"code":"import { call, put, takeEvery, all } from 'redux-saga/effects';\nimport { types, fetchUsersSuccess, fetchUsersFail } from './actions';\nimport axios from 'axios'; //este saga se deja de ejemplo, pero no se utiliza en la app\n\nfunction* loadUsers() {\n  try {\n    const res = yield call(axios.get, 'https://jsonplaceholder.typicode.com/users');\n\n    if (res.status === 200) {\n      yield put(fetchUsersSuccess(res.data));\n    } else {\n      yield put(fetchUsersFail());\n    }\n  } catch (error) {\n    yield put(fetchUsersFail(error));\n  }\n}\n\nfunction* watchLoadUsers() {\n  yield takeEvery(types.FETCH_USERS_START, loadUsers);\n}\n\nexport default function* rootSaga() {\n  yield all([watchLoadUsers()]);\n}","map":{"version":3,"sources":["/home/jcdeccechis/interfaces-facultad/materialComponents/src/sagas.js"],"names":["call","put","takeEvery","all","types","fetchUsersSuccess","fetchUsersFail","axios","loadUsers","res","get","status","data","error","watchLoadUsers","FETCH_USERS_START","rootSaga"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,GAA/B,QAA2C,oBAA3C;AACA,SAASC,KAAT,EAAgBC,iBAAhB,EAAmCC,cAAnC,QAAyD,WAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,UAAUC,SAAV,GAAsB;AACpB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,IAAI,CAACO,KAAK,CAACG,GAAP,EAAY,4CAAZ,CAAtB;;AACA,QAAGD,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAuB;AACrB,YAAMV,GAAG,CAACI,iBAAiB,CAACI,GAAG,CAACG,IAAL,CAAlB,CAAT;AACD,KAFD,MAGK;AACH,YAAMX,GAAG,CAACK,cAAc,EAAf,CAAT;AACD;AACF,GARD,CAQE,OAAOO,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,cAAc,CAACO,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUC,cAAV,GAA2B;AACzB,QAAMZ,SAAS,CAACE,KAAK,CAACW,iBAAP,EAA0BP,SAA1B,CAAf;AACD;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAClC,QAAMb,GAAG,CAAC,CACRW,cAAc,EADN,CAAD,CAAT;AAGD","sourcesContent":["\nimport { call, put, takeEvery, all, } from 'redux-saga/effects'\nimport { types, fetchUsersSuccess, fetchUsersFail } from './actions'\nimport axios from 'axios';\n\n//este saga se deja de ejemplo, pero no se utiliza en la app\nfunction* loadUsers() {\n  try {\n    const res = yield call(axios.get, 'https://jsonplaceholder.typicode.com/users')\n    if(res.status === 200) {\n      yield put(fetchUsersSuccess(res.data))\n    }\n    else {\n      yield put(fetchUsersFail())\n    }\n  } catch (error) {\n    yield put(fetchUsersFail(error))\n  }\n}\n\nfunction* watchLoadUsers() {\n  yield takeEvery(types.FETCH_USERS_START, loadUsers)\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchLoadUsers(),\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}